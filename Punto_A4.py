# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Punto_A4.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(698, 716)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 40, 105, 18))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 80, 110, 18))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(30, 120, 91, 18))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalSlider = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider.setGeometry(QtCore.QRect(240, 40, 321, 22))
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.horizontalSlider_2 = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider_2.setGeometry(QtCore.QRect(240, 80, 321, 22))
        self.horizontalSlider_2.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_2.setObjectName("horizontalSlider_2")
        self.horizontalSlider_3 = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider_3.setGeometry(QtCore.QRect(240, 120, 321, 22))
        self.horizontalSlider_3.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_3.setObjectName("horizontalSlider_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(320, 570, 301, 51))
        self.label_4.setStyleSheet("border-image: url(:/cct/logo ECCI.jpg);")
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(10, 520, 251, 131))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_5.setObjectName("label_5")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(20, 160, 581, 360))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        #self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        #self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(20, 350, 581, 161))
        #self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        #self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        #self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        #self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(150, 40, 71, 21))
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(150, 80, 71, 21))
        self.label_7.setText("")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(150, 120, 71, 21))
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #/////////////////////////////////////////////////////////////////
        #////Crear una figura de Matplotlib como variable de instancia////
        #/////////////////////////////////////////////////////////////////
        self.figure = Figure()
        self.canvas = FigureCanvas(self.figure)
        self.verticalLayout.addWidget(self.canvas)  # Asegúrate de tener un QVBoxLayout en tu diseño
        
        
        #/////////////////////////////////////////////////////////////////
        #////////////////configuracion sliders////////////////////////////
        #/////////////////////////////////////////////////////////////////
        self.horizontalSlider.setMinimum(1)             #seteo valor minimo del slider 1
        self.horizontalSlider.setMaximum(20000)           #seteo valor maximo del slider 1
        self.horizontalSlider.setSingleStep(1)          #defino el paso (1 en 1) 
        self.horizontalSlider.setValue(1)               #inicia en 1
        self.horizontalSlider.valueChanged.connect(self.grafica)

        self.horizontalSlider_2.setMinimum(1)           #seteo valor minimo del slider 2
        self.horizontalSlider_2.setMaximum(2000)        #seteo valor maximo del slider 2
        self.horizontalSlider_2.setSingleStep(1)        #defino el paso (1 en 1) 
        self.horizontalSlider_2.setValue(1)             #inicia en 1
        self.horizontalSlider_2.valueChanged.connect(self.grafica)

        self.horizontalSlider_3.setMinimum(1)           #seteo valor minimo del slider 3
        self.horizontalSlider_3.setMaximum(50)          #seteo valor maximo del slider 3
        self.horizontalSlider_3.setSingleStep(1)        #defino el paso (de a 0.1)
        self.horizontalSlider_3.setValue(0)             #inicia en 0
        self.horizontalSlider_3.valueChanged.connect(self.grafica)



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Grafica dinamica"))
        self.label.setText(_translate("MainWindow", "Resistencia Ω "))
        self.label_2.setText(_translate("MainWindow", "Capacitor uF"))
        self.label_3.setText(_translate("MainWindow", "Voltaje V"))
        self.label_5.setText(_translate("MainWindow", "Daniel ricardo quiroga"))

        #creo metodo para leer el valor del slider
    def grafica(self):
        resistencia= self.horizontalSlider.value()          #tomo los datos del slider 1 resistencia
        self.label_6.setText(str(resistencia))
        print(f'valor de resistencia {resistencia}')

        cap= self.horizontalSlider_2.value()                #tomo los datos del slider 2 capacitancia
        capacitancia = cap/1000000
        self.label_7.setText(str(cap))
        print(f'valor de capacitancia {capacitancia}')

        voltaje= self.horizontalSlider_3.value()            #tomo los datos del slider 3 voltaje
        self.label_8.setText(str(voltaje))
        print(f'valor de voltaje {voltaje}')

        #////////////////////////////////
        #////ecuaciones para graficar////
        #////////////////////////////////
        tao = 4*resistencia*capacitancia
        tiempo = np.arange (0, 10*resistencia*capacitancia, 0.0001)
        carga= voltaje*(1-np.exp(-tiempo/(tao)))
        descarga= voltaje*(np.exp(-tiempo/(tao)))

        #limpiar figura 1
        self.figure.clear()
        axes = self.figure.add_subplot()
        axes.plot (tiempo, carga)                            #grafica carga de capcitor
        axes.set_title('grafica de carga y descarga')
        axes.set_xlim(0, 60)
        axes.set_ylim(0, 50)
        axes.set_xlabel('Tiempo')
        axes.set_ylabel('Voltaje')
        axes.plot(tiempo,descarga)
        axes.grid()
        self.canvas.draw()
                  
        
        
import logo_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
